name: Create and publish a Docker image

# Sets the events which will trigger the Action
# `push` = any "push" action to the GitHub "remote",
# changes to any branch will be considered
on:
  push:
    branches:
       - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  # `build` is a user-defined name for this job
  build-and-push-image:
    # Set the base environment to run the Action on
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Build image
        run: |
          sudo docker build frontend/build/ --tag frontend --label "runnumber=${GITHUB_RUN_ID}"
          sudo docker build api/build/ --tag api --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        # This is where you will update the PAT to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | sudo docker login ghcr.io -u $ --password-stdin

      - name: Push image
        run: |

          # Change all uppercase to lowercase
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo VERSION=$VERSION
          sudo docker tag api  ghcr.io/starminalush/api:$VERSION
          sudo docker tag frontend  ghcr.io/starminalush/frontend:$VERSION
          sudo docker push ghcr.io/starminalush/api:$VERSION
          sudo docker push ghcr.io/starminalush/frontend:$VERSION


    

      
    
